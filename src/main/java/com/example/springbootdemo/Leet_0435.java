package com.example.springbootdemo;

import java.util.ArrayList;
import java.util.List;

public class Leet_0435 {
    public static int[][] test1 = new int[][]{
            {1, 4},//x
            {2, 3},
            {3, 4},
            {2, 4},//x
            {3, 5},//x
    };


    public static int[][] test2 = new int[][]{
            {1, 3},
            {2, 3},
            {3, 4},
            {1, 2},
    };

    public static int[][] test3 = new int[][]{
            {1, 10},
            {5, 9},
            {5, 6},
            {2, 4},
            {3, 5},
            {2, 3},
            {6, 8},
    };

    public static int[][] test4 = new int[][]{
            {1, 10},
            {5, 7},
            {2, 4},
            {3, 6},
            {6, 8},
    };

    public static int[][] test5 = new int[][]{
            {1, 2},
            {1, 2},
            {1, 2},
    };

    public static int[][] test6 = new int[][]{{81, 97}, {-71, 60}, {36, 97}, {76, 96}, {59, 68}, {54, 88}, {-65, 40}, {83, 84}, {27, 50}, {-59, -50}, {73, 78}, {50, 57}, {-49, 81}, {-16, 90}, {-83, -23}, {-58, 98}, {78, 99}, {-57, 81}, {-2, 85}, {-88, 45}, {85, 90}, {-64, 17}, {76, 78}, {-17, 5}, {-98, 15}, {86, 100}};

    public static int[][] test7 = new int[][]{{-36,3},{-79,-69},{-52,5},{-67,-22},{86,98},{1,21},{-92,79},{-13,2},{-92,-4},{77,96},{30,63},{32,84},{47,93},{8,93},{-33,82},{11,12},{6,15},{-62,35},{28,58},{92,98},{-78,-47},{-25,4},{26,89},{-54,89},{-80,-14},{42,63},{-80,91},{71,75},{23,39},{-45,-15},{85,94},{-42,-35},{-90,-13},{-71,-18},{22,87},{52,61},{-79,77},{-91,-74},{66,90},{-58,93},{-8,97},{40,98},{-39,55},{-4,29},{-99,-95},{48,54},{16,48},{62,66},{55,79},{82,91},{-66,-57},{-73,-41},{-15,40},{-32,12},{47,61},{41,84},{-20,98},{-36,-21},{4,42},{-3,69},{43,44},{-16,28},{-90,56},{16,95},{-5,77},{-71,-52},{-42,-31},{-79,65},{-6,32},{31,78},{-92,77},{-40,25},{71,84},{32,85},{-84,-12},{13,15},{90,92},{-87,-73},{4,94},{12,27},{-12,-8},{-58,-28},{-15,96},{-85,-47},{-61,30},{1,4},{59,93},{-96,-4},{85,100},{-11,9},{-85,69},{-42,26},{-87,-5},{28,84},{45,50},{34,100},{-79,-78},{-13,60},{-72,51},{36,62},{20,84},{14,60},{-33,-15},{81,95},{10,69},{-62,52},{-3,63},{-39,14},{49,98},{77,80},{87,99},{-71,19},{10,67},{-14,97},{-65,-52},{91,99},{52,92},{-43,66},{75,87},{-23,95},{99,100},{-80,3},{-18,82},{-44,-40},{-65,-43},{-48,44},{57,97},{-81,-30},{3,97},{54,63},{16,67},{20,78},{-38,17},{61,83},{-12,59},{-39,-35},{15,26},{-73,93},{-3,58},{-70,-32},{-66,-15},{-54,-25},{79,95},{-56,15},{-11,20},{-87,67},{82,92},{69,98},{-14,-6},{1,42},{-56,24},{13,89},{-90,-39},{-18,31},{-91,-16},{16,18},{-62,-12},{50,77},{68,77},{79,90},{8,27},{-22,34},{-22,6},{37,42},{-64,-63},{88,99},{-42,57},{-50,-42},{-62,89},{-3,26},{43,88},{65,86},{-25,-8},{52,76},{-27,45},{69,84},{-57,-8},{49,58},{85,99},{67,96},{-8,6},{-13,70},{73,88},{98,100},{83,98},{76,88},{-61,-8},{39,42},{-37,40},{-87,53},{-83,-44},{-74,82},{89,90},{-82,96},{-87,58},{-75,-65},{12,65},{-5,23},{-95,22},{63,89},{44,73},{37,40},{-76,16},{87,98},{4,66},{-30,61},{-64,63},{48,73},{-35,16},{74,98},{94,95},{-75,-34},{24,30},{-69,-3},{-1,26},{-46,45},{48,99},{52,71},{-80,-16},{-41,7},{-15,82},{-88,16},{44,56},{-96,73},{99,100},{-54,54},{-31,-8},{-12,39},{-69,19},{36,62},{-46,25},{74,77},{-98,-67},{73,85},{76,98},{-99,-51},{12,58},{-24,37},{-78,-76},{29,52},{-62,-50},{85,94},{28,39},{5,20},{55,93},{91,99},{-72,-53},{-35,3},{-6,45},{-13,65},{70,87},{-45,49},{31,56},{-18,78},{86,99},{99,100},{70,84},{-60,49},{81,89},{-33,41},{1,30},{39,50},{-68,-48},{68,93},{-20,31},{-73,69},{-55,75},{-58,-52},{-35,9},{73,88},{18,59},{12,48},{35,78},{60,73},{21,43},{76,86},{-39,-32},{-43,16},{-57,-16},{46,85},{18,48},{-99,62},{-31,-18},{-43,27},{-52,98},{-30,-15},{-22,59},{-22,-12},{-59,59},{29,39},{-70,-65},{-26,76},{63,69},{-82,-69},{-38,92},{47,100},{-49,-41},{52,71},{61,91},{-69,36},{-10,58},{80,81},{1,27},{-56,25},{-87,-15},{-77,85},{-44,-7},{76,82},{0,98},{55,99},{-83,-64},{72,91},{-43,44},{89,91},{-16,74},{76,79},{18,71},{18,92},{-4,99},{6,27},{-64,52},{-31,26},{24,29},{4,85},{-71,56},{13,78},{-88,88},{22,54},{45,73},{17,84},{-95,47},{-38,18},{0,57},{-76,-40},{2,11},{24,34},{93,95},{67,92},{99,100},{-52,96},{-66,-53},{98,100},{64,86},{19,99},{-1,75},{51,81},{10,85},{82,99},{87,100},{33,35},{78,83},{-40,-30},{-25,20},{42,44},{-18,87},{65,72},{42,92},{-85,-16},{-48,39},{78,88},{78,95},{-31,77},{-43,11},{38,44},{55,89},{22,63},{76,94},{-60,12},{39,92},{72,84},{-37,-20},{-57,72},{49,51},{53,86},{-85,33},{-33,43},{-42,16},{85,99},{21,24},{-61,42},{16,61},{-54,-4},{-15,12},{-35,59},{88,97},{59,67},{16,30},{-70,-34},{61,97},{-70,-43},{-90,68},{-40,16},{67,75},{0,11},{-88,-30},{15,32},{-11,86},{4,78},{-74,69},{33,80},{19,35},{-89,65},{-83,51},{-32,22},{-48,-17},{78,97},{79,100},{45,84},{60,91},{29,87},{-51,98},{-50,-49},{51,52},{96,97},{18,69},{-32,84},{-40,20},{75,98},{82,91},{-90,-29},{11,30},{-4,64},{-1,40},{52,78},{-71,-1},{-23,13},{87,88},{0,2},{32,75},{86,92},{-37,-9},{-18,44},{-95,-52},{50,55},{49,67},{-88,56},{28,63},{-41,12},{8,65},{-67,51},{10,97},{30,100},{-27,-15},{-14,33},{-76,51},{86,94},{-45,48},{53,96},{-64,65},{-44,-20},{76,84},{13,99},{32,92},{-48,-47},{-15,14},{-81,15},{-91,27},{51,80},{-81,-26},{-81,-3},{31,81},{9,59},{13,25},{-87,20},{-15,20},{16,43},{-15,12},{-89,12},{22,89},{55,61},{-99,21},{52,55},{-77,-36},{-43,51},{27,89},{4,19},{-22,3},{-91,80},{9,92},{-87,33},{55,71},{-50,85},{51,85},{-33,34},{-35,-18},{47,75},{47,97},{-10,53},{-61,80},{-15,29},{28,90},{29,82},{-84,-77},{-6,97},{71,94},{-63,27},{-35,85},{-70,-45},{-60,-50},{-23,69},{-25,66},{74,81},{-36,40},{-9,22},{22,72},{-79,7},{-70,73},{-12,47},{22,54},{83,100},{75,89},{-87,13},{-1,0},{-47,96},{58,83},{55,98},{51,75},{-87,-57},{40,86},{38,88},{39,88},{-82,10},{49,56},{-70,94},{-12,-7},{8,82},{-43,-35},{-14,28},{-17,-10},{73,79},{-95,-31},{-10,81},{77,88},{-50,6},{16,29},{-79,43},{-85,-32},{-93,90},{-71,35},{-73,-5},{-15,96},{-16,25},{39,45},{-69,-6},{46,70},{-41,-20},{48,97},{-41,30},{1,50},{54,68},{32,56},{-57,91},{82,98},{18,41},{75,95},{76,96},{-14,97},{55,66},{-45,-40},{87,97},{64,93},{49,69},{59,85},{-53,72},{-43,2},{1,33},{-41,45},{-98,22},{78,96},{-92,85},{21,62},{-37,-6},{78,99},{40,92},{63,100},{45,46},{76,88},{33,93},{21,44},{-64,-52},{67,83},{4,93},{58,90},{2,45},{15,51},{-58,32},{-22,99},{-84,45},{82,85},{-29,39},{-59,-33},{89,99},{23,80},{17,58},{16,69},{-65,28},{-43,90},{24,43},{-84,7},{-90,84},{30,89},{-83,-30},{-3,4},{-26,93},{-8,65},{-46,-26},{-76,12},{7,38},{74,98},{-95,71},{-14,0},{-37,67},{22,93},{30,40},{-26,-6},{60,81},{33,85},{-19,7},{-9,66},{-94,-72},{91,94},{-54,99},{13,26},{50,73},{6,28},{71,76},{77,93},{64,71},{54,82},{84,91},{57,99},{-98,-75},{83,100},{-3,12},{-99,-13},{83,88},{0,26},{-26,-17},{14,62},{75,96},{-8,40},{83,86},{26,49},{71,76},{59,75},{-14,20},{-76,37},{-53,-39},{-60,-56},{-98,3},{74,83},{-14,81},{9,51},{-70,32},{-34,79},{-72,-46},{79,93},{71,73},{-43,38},{-12,32},{-78,95},{-43,53},{-98,-85},{-1,61},{-35,41},{-9,62},{-13,14},{4,38},{-53,37},{27,99},{57,97},{63,68},{15,45},{40,47},{16,98},{35,57},{-4,96},{-75,89},{-50,91},{-16,90},{-30,2},{-84,-50},{-35,-26},{-17,6},{-77,56},{52,79},{30,79},{-74,-71},{-2,51},{-19,69},{-92,-28},{-39,81},{-40,-5},{-78,12},{-96,6},{53,67},{-63,79},{28,62},{44,48},{-74,-12},{91,97},{-99,8},{-78,-21},{81,95},{75,78},{39,70},{3,48},{-45,-25},{83,84},{-66,-39},{37,65},{-64,27},{-44,88},{88,89},{-4,98},{-29,72},{-4,15},{-20,76},{-79,62},{44,54},{-34,59},{-35,9},{-55,85},{7,32},{-91,-21},{91,100},{61,92},{53,72},{23,76},{23,93},{-50,86},{24,48},{-19,94},{-94,75},{-47,91},{-52,1},{-7,97},{19,92},{-91,-62},{-17,40},{-17,5},{66,85},{-73,-43},{62,93},{-63,-6},{-18,53},{-61,22},{-38,93},{-36,-28},{59,87},{-88,-71},{-51,-11},{1,68},{-34,16},{46,99},{-44,72},{-13,-6},{7,64},{5,65},{37,55},{35,63},{22,82},{-30,81},{59,74},{99,100},{87,90},{27,55},{-54,-16},{-9,35},{-75,92},{83,93},{-24,44},{57,87},{44,56},{31,72},{76,95},{-74,79},{13,100},{41,76},{-40,31},{-58,43},{-74,-13},{-8,34},{-87,-69},{86,94},{-78,-20},{-47,26},{-46,38},{99,100},{-45,-42},{-44,79},{71,81},{-9,75},{-17,16},{12,93},{22,23},{55,61},{25,50},{75,94},{50,96},{70,81},{35,67},{2,82},{-39,-6},{25,51},{-98,46},{44,60},{-63,92},{-26,50},{-17,1},{-32,86},{88,92},{-72,-43},{54,55},{70,79},{8,96},{31,51},{77,97},{8,88},{54,68},{21,72},{-9,43},{-80,51},{-44,39},{-41,97},{27,48},{-51,-32},{66,70},{-52,15},{-86,-63},{-30,33},{62,64},{37,51},{83,86},{-11,53},{-87,89},{60,87},{-25,89},{6,35}};

    public static void main(String[] args) {
        System.out.println(new Leet_0435().eraseOverlapIntervals(test7));

    }

    public static int conflict(Interval cur, int start, List<Interval> list) {
        int conflict = 0;
        for (int i = start; i < list.size(); i++) {
            //不冲突
            if (cur.right <= list.get(i).left) {
                continue;
            }
            conflict++;
        }
        return conflict;
    }

    public static List<Interval> toList(int[][] arr) {
        List<Interval> list = new ArrayList<>();

        for (int[] ints : arr) {
            list.add(new Interval(ints[0], ints[1]));
        }

        return list;
    }

    public int eraseOverlapIntervals(int[][] intervals) {
        if (intervals.length <= 1) {
            return 0;
        }

        List<Interval> list = toList(intervals);
        list.sort((o1, o2) -> {
            if (o1.left == o2.left) {
                return o1.right - o2.right;
            }
            return o1.getLeft() - o2.getLeft();
        });
        System.out.println(list);

        Interval last = new Interval(list.get(0).left, list.get(0).right);
        List<Interval> retList = new ArrayList<>();
        for (int i = 1; i < list.size(); i++) {
            Interval obj = list.get(i);
            if (obj.left == -1) {
                continue;
            }
            //不冲突
            if (last.right <= obj.left) {
                retList.add(last);
                last = obj;

            }
            //冲突相等
            else if (last.left == obj.left && last.right == obj.right) {
                obj.left = -1;
                obj.right = -1;
            }
            //冲突包含, 选小的
            else if (last.left == obj.left && last.right <= obj.left) {
                obj.left = -1;
                obj.right = -1;

            }
            //冲突不包含
            else {
                int cLast = conflict(last, i + 1, list);
                int cObj = conflict(obj, i + 1, list);
                if (cLast <= cObj) {
                    obj.left = -1;
                    obj.right = -1;
                } else {
                    last.left = -1;
                    last.right = -1;
                    last = obj;
                }
            }
        }
        if (last.left != -1) {
            retList.add(last);
        }

        System.out.println(retList);

        if (retList.size() == 0) {
            return list.size() - 1;
        }
        return list.size() - retList.size();
    }

}

class Interval {
    public int left;
    public int right;

    public Interval(int left, int right) {
        this.left = left;
        this.right = right;
    }

    public int getLeft() {
        return left;
    }

    public void setLeft(int left) {
        this.left = left;
    }

    public int getRight() {
        return right;
    }

    public void setRight(int right) {
        this.right = right;
    }

    @Override
    public String toString() {
        return "[" + left + ", " + right + "]";
    }
}


